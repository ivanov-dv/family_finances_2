services:
  db:
    image: postgres:17
    env_file:
      - .env
    environment:
      - POSTGRES_DB
      - POSTGRES_USER
      - POSTGRES_PASSWORD
#    ports:
#      - "5432:5432"
#    volumes:
#      - ff2_postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - ff2_network

  django:
    build:
      context: .
      dockerfile: Dockerfile.local
    env_file:
      - .env
    environment:
      POSTGRES_HOST: db
    command: > 
      bash -c "
        cd src &&
        poetry run python manage.py migrate &&
        poetry run python manage.py collectstatic --noinput &&
        poetry run python manage.py loaddata data.json &&
        cp -r /app/src/collected_static/. /backend_static &&
        cp -r /app/src/static/. /backend_static &&
        poetry run python manage.py runserver 0.0.0.0:8000
      "
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ff2_static:/backend_static
      - ./:/app
    networks:
      - ff2_network

  gateway:
    build: nginx/.
    env_file: .env
    depends_on:
      - django
    volumes:
      - ff2_static:/static/
    networks:
      - ff2_network
    ports:
      - "9000:80"

volumes:
#  ff2_postgres_data:
  ff2_static:

networks:
  ff2_network: